@*263. Создать новый компонент TeslaCarOrderManagment*@
@page "/car-order/edit/{Id:int}"

@using Models.DTO
@using Business.Repository.IRepository
@using Common

@inject ICarOrderDetailsRepository _db

<div class="mx-4 mt-3 px-0 px-md-3 mx-md-3" style="border-radius: 20px; border: 1px groove #000; background-color: #ffffffe6;">

    @if (isLoading)
    {
        <div class="spinner-grow"></div>
    }
    else
    {
        <div class="row p-2 my-3" style="border-radius: 20px;">
            <div class="col-sm-12 col-md-7 p-4">
                <div class="row pb-3 px-2 text-success border-bottom border-dark">
                    <div class="col-8 py-1">
                        <p style="font-size:x-large; margin:0px;">Booking Details</p>
                    </div>
                    <div class="col-4 p-0 d-flex justify-content-end align-items-center">
                        <NavLink href="order-list" class="btn btn-secondary">Back to list</NavLink>
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-sm-12 col-md-6">

                        <!-- Carousel wrapper -->
                        <div id="carouselBasicExample" class="carousel slide carousel-fade" data-mdb-ride="carousel">
                            <!-- Indicators -->
                            <div class="carousel-indicators">
                                @{
                                    int imageIndex = 0;
                                    int innerImageIndex = 0;
                                }
                                @foreach (var image in carBooking.TeslaCarDTO.TeslaCarImages)
                                {
                                    if (imageIndex == 0)
                                    {
                                        <button type="button"
                                                data-mdb-target="#carouselBasicExample"
                                                data-mdb-slide-to="@imageIndex"
                                                class="active"
                                                aria-current="true"
                                                aria-label="Slide 1">
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button"
                                                data-mdb-target="#carouselBasicExample"
                                                data-mdb-slide-to="@imageIndex"
                                                aria-label="Slide 2">
                                        </button>
                                    }
                                    imageIndex++;
                                }
                            </div>

                            <!-- Inner -->
                            <div class="carousel-inner">
                                <!-- Single item -->
                                @foreach (var image in carBooking.TeslaCarDTO.TeslaCarImages)
                                {
                                    if (innerImageIndex == 0)
                                    {
                                        <div class="carousel-item active h-25">
                                            <img src="@image.CarImageUrl" class="d-block w-100" style="border-radius: 20px;" alt="Sunset Over the City" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="carousel-item h-25">
                                            <img src="@image.CarImageUrl" class="d-block w-100" style="border-radius: 20px;" alt="Sunset Over the City" />
                                        </div>
                                    }
                                    innerImageIndex++;
                                }


                                <!-- Inner -->
                                <!-- Controls -->
                                <button class="carousel-control-prev" type="button" data-mdb-target="#carouselBasicExample" data-mdb-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-mdb-target="#carouselBasicExample" data-mdb-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>
                        </div>
                        <!-- Carousel wrapper -->

                    </div>

                    <div class="col-sm-12 col-md-6">
                        <span class="float-md-end pt-4">
                            <span class="float-md-end">Seats count: @carBooking.TeslaCarDTO.NumberOfSeats</span><br />
                            <h4 class="text-warning font-weight-bold pt-md-2 float-md-end"><span style="border-bottom: 1px solid #ff6a00">@carBooking.TotalCost.ToString("#,#.00#;(#,#.00#)")</span> €</h4><br />
                            <span class="float-md-end">Cost for @carBooking.TeslaCarDTO.TotalDays day(s)</span>
                        </span>
                    </div>

                </div>

                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large:">@carBooking.TeslaCarDTO.Name</p>
                        <p class="card-text" style="font-size: large;">@((MarkupString)carBooking.TeslaCarDTO.Details)</p>
                    </div>
                </div>
                <div class="row p-2">
                    @if (carBooking.Status.Equals(Status.Booked) || carBooking.Status.Equals(Status.Pending))
                    {
                        <div class="col">
                            <button class="btn btn-danger form-control" @onclick="CancelBooking">Cancel Booking</button>
                        </div>
                    }
                    @if (carBooking.Status.Equals(Status.Booked))
                    {
                        <div class="col">
                            <button class="btn btn-warning form-control" @onclick="NoShowBooking">No Show</button>
                        </div>
                    }
                </div>

            </div>

            <div class="col-12 col-lg-5 p-4 mt-2 mt-md-0 border-start border-dark">

                <div class="row px-2 text-success border-bottom border-dark">
                    <div class="col-7 py-1">
                        <p style="font-size: x-large; margin: 0px;">Rent Details</p>
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="form-group pt-2">
                        <label class="text-warning">Booking Status</label>
                        <input type="text" @bind-value="carBooking.Status" class="form-control" disabled />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Name</label>
                        <input type="text" @bind-value="carBooking.Name" class="form-control" disabled />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Phone</label>
                        <input type="tel" class="form-control" @bind-value="carBooking.Phone" disabled />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Email</label>
                        <input type="text" class="form-control" @bind-value="carBooking.Email" disabled />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Start rent date</label>
                        <input type="date" disabled="disabled" class="form-control" @bind-value="carBooking.StartRentDate" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">End rent date</label>
                        <input type="date" disabled="disabled" class="form-control" @bind-value="carBooking.EndRentDate" />
                    </div>

                    @if (carBooking.Status.Equals(Status.RentStarted) || carBooking.Status.Equals(Status.RenEnded))
                    {
                        <div class="form-group pt-2">
                            <label class="text-warning">Actual start rent date</label>
                            <input type="date" disabled="disabled" class="form-control" @bind-value="carBooking.ActualStartRentDate" />
                        </div>
                    }

                    @if (carBooking.Status.Equals(Status.RenEnded))
                    {
                        <div class="form-group pt-2">
                            <label class="text-warning">Actual End rent date</label>
                            <input type="date" disabled="disabled" class="form-control" @bind-value="carBooking.ActualEndRentDate" />
                        </div>
                    }
                    <div class="form-group pt-2">
                        @if (carBooking.Status.Equals(Status.Booked) || carBooking.Status.Equals(Status.Pending))
                        {
                            <div class="col p-0">
                                <button class="btn btn-outline-success" @onclick="ConfirmBooking">Confirm Rent Started</button>
                            </div>
                        }
                        @if (carBooking.Status.Equals(Status.RentStarted))
                        {
                            <div class="col p-0">
                                <button class="btn btn-outline-danger" @onclick="ConfirmEndBooking">Confirm Rent Ended</button>
                            </div>
                        }
                    </div>

                </div>

            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int? Id { get; set; }

    bool isLoading = false;
    CarOrderDetailsDTO carBooking = new() { TeslaCarDTO = new TeslaCarDTO() };

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        if (Id is not null)
            carBooking = await _db.GetCarOrderDetailsAsync(Id.Value);
        else
        {
            // TODO: ERROR
        }

        isLoading = false;
    }

    async Task ConfirmBooking()
    {
        var result = await _db.UpdateOrderStatusAsync(carBooking.Id, Common.Status.RentStarted);

        if (result)
            carBooking = await _db.GetCarOrderDetailsAsync(Id.Value);
    }

    async Task ConfirmEndBooking()
    {
        var result = await _db.UpdateOrderStatusAsync(carBooking.Id, Common.Status.RenEnded);

        if (result)
            carBooking = await _db.GetCarOrderDetailsAsync(Id.Value);
    }

    async Task CancelBooking()
    {
        var result = await _db.UpdateOrderStatusAsync(carBooking.Id, Common.Status.Cancelled);

        if (result)
            carBooking = await _db.GetCarOrderDetailsAsync(Id.Value);
    }

    async Task NoShowBooking()
    {
        var result = await _db.UpdateOrderStatusAsync(carBooking.Id, Common.Status.NoShow);

        if (result)
            carBooking = await _db.GetCarOrderDetailsAsync(Id.Value);
    }
}
