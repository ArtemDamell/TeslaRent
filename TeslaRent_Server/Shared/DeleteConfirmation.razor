@*75. Создаом компонент подтверждения удаления машины*@

@if (OnShowCloseModal)
{
    <div class="modal show fade" data-backdrop="static" data-keyboard="false" id="deleteConfModal" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-modal-dialog-centered" role="document">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title" id="exModalLabel">Confirm Deleting</h5>
                    <button type="button" class="btn-close" @onclick="OnCloseHandler" datadata-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>
                </div>

                <div class="modal-body">
                    <p>Are you sure you want to delete <strong class="text-danger">@OnCarForRemoving?.Name</strong> ?</p>
                    <p>With  <strong class="text-danger">@OnCarForRemoving?.RegularRate</strong> € per  <strong class="text-danger">@OnCarForRemoving?.Occupancy</strong> day(s)</p>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-outline-danger" type="button" @onclick="(() =>OnConfirmed.InvokeAsync(true))">
                        Delete
                    </button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="OnCloseHandler" data-dismiss="modal">
                        Cancel
                    </button>
                </div>

            </div>
        </div>
    </div>
}
@code {
    [Parameter] public bool OnShowCloseModal { get; set; }
    [Parameter] public TeslaCarDTO? OnCarForRemoving { get; set; }

    [Parameter] public EventCallback  OnCloseHandler { get; set; } 
    [Parameter] public EventCallback<bool> OnConfirmed { get; set; }
    }